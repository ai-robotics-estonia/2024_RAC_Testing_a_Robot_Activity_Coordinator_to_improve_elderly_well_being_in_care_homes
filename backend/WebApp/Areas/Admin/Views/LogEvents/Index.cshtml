@using System.Globalization
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using X.Web.PagedList
@model WebApp.Areas.Admin.ViewModels.LogEventsViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Temi events</h1>
<form asp-action="Index" method="get">
    <div class="row">
        <div class="col-md-4">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Tag" class="control-label"></label>
                <input asp-for="Tag" class="form-control"/>
                <span asp-validation-for="Tag" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Message" class="control-label"></label>
                <input asp-for="Message" class="form-control"/>
                <span asp-validation-for="Message" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="PageSize" class="control-label"></label>
                <select asp-for="PageSize" class="form-select" asp-items="Model.PageSizeSelectList">
                </select>
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                <label asp-for="CreatedAtFrom" class="control-label"></label>
                <input type="text" asp-for="CreatedAtFrom" value="@Model.CreatedAtFrom.ToString("o", CultureInfo.InvariantCulture)" class="form-control"/>
                <span asp-validation-for="CreatedAtFrom" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CreatedAtTo" class="control-label"></label>
                <input type="text" asp-for="CreatedAtTo" value="@Model.CreatedAtTo.ToString("o", CultureInfo.InvariantCulture)" class="form-control"/>
                <span asp-validation-for="CreatedAtTo" class="text-danger"></span>
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                <label asp-for="RobotId" class="control-label"></label>
                <select asp-for="RobotId" class="form-select" asp-items="Model.RobotSelectList">
                    <option>--- Any ---</option>
                </select>
            </div>

            <div class="form-group">
                <label asp-for="MapId" class="control-label"></label>
                <select asp-for="MapId" class="form-select" asp-items="Model.MapSelectList">
                    <option>--- Any ---</option>
                </select>
            </div>

            <div class="form-group">
                <label asp-for="AppId" class="control-label"></label>
                <select asp-for="AppId" class="form-select" asp-items="Model.AppSelectList">
                    <option>--- Any ---</option>
                </select>
            </div>
        </div>

    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="submit" value="Filter" class="btn btn-primary"/>
            </div>
        </div>
    </div>
</form>

@functions
{
    // helper function to generate Paged list url for every page
    string? GeneratePageUrl(int page) =>
        Url.Action("Index", new
        {
            page, Model.Tag, Model.Message, Model.PageSize,
            CreatedAtFrom = Model.CreatedAtFrom.ToString("o", CultureInfo.InvariantCulture),
            CreatedAtTo = Model.CreatedAtTo.ToString("o", CultureInfo.InvariantCulture),
            Model.RobotId, Model.MapId, Model.AppId
        });
}

@Html.PagedListPager(
    Model.LogEvents,
    GeneratePageUrl,
    PagedListRenderOptions.OnlyShowFivePagesAtATime
)
<table class="table">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.LogEvents[0].RobotMapApp)<br/>
            @Html.DisplayNameFor(model => model.LogEvents[0].CreatedAt)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LogEvents[0].AppLaunch)<br/>
            @Html.DisplayNameFor(model => model.LogEvents[0].Tag)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LogEvents[0].IntValue)<br/>
            @Html.DisplayNameFor(model => model.LogEvents[0].Message)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LogEvents[0].DoubleValue) <br/>
            Action
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.LogEvents)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.RobotMapApp!.DisplayName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AppLaunch)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IntValue)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DoubleValue)
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Tag)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Message)
            </td>
            <td>
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>
@Html.PagedListPager(
    Model.LogEvents,
    GeneratePageUrl,
    PagedListRenderOptions.OnlyShowFivePagesAtATime
)